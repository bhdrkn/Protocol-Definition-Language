/*
* generated by Xtext
*/
grammar InternalProtocol;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.senior.project.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.senior.project.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.senior.project.services.ProtocolGrammarAccess;

}

@parser::members {
 
 	private ProtocolGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ProtocolGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulePDLFile
entryRulePDLFile 
:
{ before(grammarAccess.getPDLFileRule()); }
	 rulePDLFile
{ after(grammarAccess.getPDLFileRule()); } 
	 EOF 
;

// Rule PDLFile
rulePDLFile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPDLFileAccess().getGroup()); }
(rule__PDLFile__Group__0)
{ after(grammarAccess.getPDLFileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinitions
entryRuleDefinitions 
:
{ before(grammarAccess.getDefinitionsRule()); }
	 ruleDefinitions
{ after(grammarAccess.getDefinitionsRule()); } 
	 EOF 
;

// Rule Definitions
ruleDefinitions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionsAccess().getGroup()); }
(rule__Definitions__Group__0)
{ after(grammarAccess.getDefinitionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefine
entryRuleDefine 
:
{ before(grammarAccess.getDefineRule()); }
	 ruleDefine
{ after(grammarAccess.getDefineRule()); } 
	 EOF 
;

// Rule Define
ruleDefine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefineAccess().getGroup()); }
(rule__Define__Group__0)
{ after(grammarAccess.getDefineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransactions
entryRuleTransactions 
:
{ before(grammarAccess.getTransactionsRule()); }
	 ruleTransactions
{ after(grammarAccess.getTransactionsRule()); } 
	 EOF 
;

// Rule Transactions
ruleTransactions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransactionsAccess().getGroup()); }
(rule__Transactions__Group__0)
{ after(grammarAccess.getTransactionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransaction
entryRuleTransaction 
:
{ before(grammarAccess.getTransactionRule()); }
	 ruleTransaction
{ after(grammarAccess.getTransactionRule()); } 
	 EOF 
;

// Rule Transaction
ruleTransaction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransactionAccess().getGroup()); }
(rule__Transaction__Group__0)
{ after(grammarAccess.getTransactionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgument
entryRuleArgument 
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentAccess().getGroup()); }
(rule__Argument__Group__0)
{ after(grammarAccess.getArgumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getAlternatives()); }
(rule__Operation__Alternatives)
{ after(grammarAccess.getOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecrypt
entryRuleDecrypt 
:
{ before(grammarAccess.getDecryptRule()); }
	 ruleDecrypt
{ after(grammarAccess.getDecryptRule()); } 
	 EOF 
;

// Rule Decrypt
ruleDecrypt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDecryptAccess().getGroup()); }
(rule__Decrypt__Group__0)
{ after(grammarAccess.getDecryptAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEncrypt
entryRuleEncrypt 
:
{ before(grammarAccess.getEncryptRule()); }
	 ruleEncrypt
{ after(grammarAccess.getEncryptRule()); } 
	 EOF 
;

// Rule Encrypt
ruleEncrypt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEncryptAccess().getGroup()); }
(rule__Encrypt__Group__0)
{ after(grammarAccess.getEncryptAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSend
entryRuleSend 
:
{ before(grammarAccess.getSendRule()); }
	 ruleSend
{ after(grammarAccess.getSendRule()); } 
	 EOF 
;

// Rule Send
ruleSend
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSendAccess().getGroup()); }
(rule__Send__Group__0)
{ after(grammarAccess.getSendAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrint
entryRulePrint 
:
{ before(grammarAccess.getPrintRule()); }
	 rulePrint
{ after(grammarAccess.getPrintRule()); } 
	 EOF 
;

// Rule Print
rulePrint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrintAccess().getGroup()); }
(rule__Print__Group__0)
{ after(grammarAccess.getPrintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCall
entryRuleCall 
:
{ before(grammarAccess.getCallRule()); }
	 ruleCall
{ after(grammarAccess.getCallRule()); } 
	 EOF 
;

// Rule Call
ruleCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallAccess().getGroup()); }
(rule__Call__Group__0)
{ after(grammarAccess.getCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStates
entryRuleStates 
:
{ before(grammarAccess.getStatesRule()); }
	 ruleStates
{ after(grammarAccess.getStatesRule()); } 
	 EOF 
;

// Rule States
ruleStates
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatesAccess().getGroup()); }
(rule__States__Group__0)
{ after(grammarAccess.getStatesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGuard
entryRuleGuard 
:
{ before(grammarAccess.getGuardRule()); }
	 ruleGuard
{ after(grammarAccess.getGuardRule()); } 
	 EOF 
;

// Rule Guard
ruleGuard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGuardAccess().getGroup()); }
(rule__Guard__Group__0)
{ after(grammarAccess.getGuardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEvent
entryRuleEvent 
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccess().getAlternatives()); }
(rule__Event__Alternatives)
{ after(grammarAccess.getEventAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGetEvent
entryRuleGetEvent 
:
{ before(grammarAccess.getGetEventRule()); }
	 ruleGetEvent
{ after(grammarAccess.getGetEventRule()); } 
	 EOF 
;

// Rule GetEvent
ruleGetEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGetEventAccess().getGroup()); }
(rule__GetEvent__Group__0)
{ after(grammarAccess.getGetEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsSendEvent
entryRuleIsSendEvent 
:
{ before(grammarAccess.getIsSendEventRule()); }
	 ruleIsSendEvent
{ after(grammarAccess.getIsSendEventRule()); } 
	 EOF 
;

// Rule IsSendEvent
ruleIsSendEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsSendEventAccess().getGroup()); }
(rule__IsSendEvent__Group__0)
{ after(grammarAccess.getIsSendEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCase
entryRuleCase 
:
{ before(grammarAccess.getCaseRule()); }
	 ruleCase
{ after(grammarAccess.getCaseRule()); } 
	 EOF 
;

// Rule Case
ruleCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseAccess().getAlternatives()); }
(rule__Case__Alternatives)
{ after(grammarAccess.getCaseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlways
entryRuleAlways 
:
{ before(grammarAccess.getAlwaysRule()); }
	 ruleAlways
{ after(grammarAccess.getAlwaysRule()); } 
	 EOF 
;

// Rule Always
ruleAlways
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlwaysAccess().getAlwaysKeyword()); }

	'always' 

{ after(grammarAccess.getAlwaysAccess().getAlwaysKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOtherwise
entryRuleOtherwise 
:
{ before(grammarAccess.getOtherwiseRule()); }
	 ruleOtherwise
{ after(grammarAccess.getOtherwiseRule()); } 
	 EOF 
;

// Rule Otherwise
ruleOtherwise
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOtherwiseAccess().getOtherwiseKeyword()); }

	'otherwise' 

{ after(grammarAccess.getOtherwiseAccess().getOtherwiseKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSource
entryRuleSource 
:
{ before(grammarAccess.getSourceRule()); }
	 ruleSource
{ after(grammarAccess.getSourceRule()); } 
	 EOF 
;

// Rule Source
ruleSource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSourceAccess().getGroup()); }
(rule__Source__Group__0)
{ after(grammarAccess.getSourceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFrom
entryRuleFrom 
:
{ before(grammarAccess.getFromRule()); }
	 ruleFrom
{ after(grammarAccess.getFromRule()); } 
	 EOF 
;

// Rule From
ruleFrom
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFromAccess().getGroup()); }
(rule__From__Group__0)
{ after(grammarAccess.getFromAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Operation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getDecryptParserRuleCall_0()); }
	ruleDecrypt
{ after(grammarAccess.getOperationAccess().getDecryptParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getEncryptParserRuleCall_1()); }
	ruleEncrypt
{ after(grammarAccess.getOperationAccess().getEncryptParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getSendParserRuleCall_2()); }
	ruleSend
{ after(grammarAccess.getOperationAccess().getSendParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getPrintParserRuleCall_3()); }
	rulePrint
{ after(grammarAccess.getOperationAccess().getPrintParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getCallParserRuleCall_4()); }
	ruleCall
{ after(grammarAccess.getOperationAccess().getCallParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getGetEventParserRuleCall_0()); }
	ruleGetEvent
{ after(grammarAccess.getEventAccess().getGetEventParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEventAccess().getIsSendEventParserRuleCall_1()); }
	ruleIsSendEvent
{ after(grammarAccess.getEventAccess().getIsSendEventParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getAlwaysParserRuleCall_0()); }
	ruleAlways
{ after(grammarAccess.getCaseAccess().getAlwaysParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCaseAccess().getOtherwiseParserRuleCall_1()); }
	ruleOtherwise
{ after(grammarAccess.getCaseAccess().getOtherwiseParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCaseAccess().getSourceParserRuleCall_2()); }
	ruleSource
{ after(grammarAccess.getCaseAccess().getSourceParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getCaseAccess().getFromParserRuleCall_3()); }
	ruleFrom
{ after(grammarAccess.getCaseAccess().getFromParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__PDLFile__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PDLFile__Group__0__Impl
	rule__PDLFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PDLFile__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPDLFileAccess().getPdlfileKeyword_0()); }

	'pdlfile' 

{ after(grammarAccess.getPDLFileAccess().getPdlfileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PDLFile__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PDLFile__Group__1__Impl
	rule__PDLFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PDLFile__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPDLFileAccess().getNameAssignment_1()); }
(rule__PDLFile__NameAssignment_1)
{ after(grammarAccess.getPDLFileAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PDLFile__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PDLFile__Group__2__Impl
	rule__PDLFile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PDLFile__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPDLFileAccess().getDefinitionAssignment_2()); }
(rule__PDLFile__DefinitionAssignment_2)
{ after(grammarAccess.getPDLFileAccess().getDefinitionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PDLFile__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PDLFile__Group__3__Impl
	rule__PDLFile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PDLFile__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPDLFileAccess().getTransactionAssignment_3()); }
(rule__PDLFile__TransactionAssignment_3)
{ after(grammarAccess.getPDLFileAccess().getTransactionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PDLFile__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PDLFile__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PDLFile__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPDLFileAccess().getStateAssignment_4()); }
(rule__PDLFile__StateAssignment_4)
{ after(grammarAccess.getPDLFileAccess().getStateAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Definitions__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definitions__Group__0__Impl
	rule__Definitions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definitions__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionsAccess().getDEFINITIONSKeyword_0()); }

	'[DEFINITIONS]' 

{ after(grammarAccess.getDefinitionsAccess().getDEFINITIONSKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definitions__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definitions__Group__1__Impl
	rule__Definitions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definitions__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionsAccess().getDefinitionsAssignment_1()); }
(rule__Definitions__DefinitionsAssignment_1)*
{ after(grammarAccess.getDefinitionsAccess().getDefinitionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definitions__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definitions__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definitions__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionsAccess().getENDKeyword_2()); }

	'[END]' 

{ after(grammarAccess.getDefinitionsAccess().getENDKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Define__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Define__Group__0__Impl
	rule__Define__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAccess().getNameAssignment_0()); }
(rule__Define__NameAssignment_0)
{ after(grammarAccess.getDefineAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Define__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Define__Group__1__Impl
	rule__Define__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAccess().getEqualsSGnKeyword_1()); }

	'=' 

{ after(grammarAccess.getDefineAccess().getEqualsSGnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Define__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Define__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAccess().getKeywordAssignment_2()); }
(rule__Define__KeywordAssignment_2)
{ after(grammarAccess.getDefineAccess().getKeywordAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Transactions__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transactions__Group__0__Impl
	rule__Transactions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transactions__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionsAccess().getTRANSACTIONSKeyword_0()); }

	'[TRANSACTIONS]' 

{ after(grammarAccess.getTransactionsAccess().getTRANSACTIONSKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transactions__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transactions__Group__1__Impl
	rule__Transactions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transactions__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionsAccess().getTransactionsAssignment_1()); }
(rule__Transactions__TransactionsAssignment_1)*
{ after(grammarAccess.getTransactionsAccess().getTransactionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transactions__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transactions__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transactions__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionsAccess().getENDKeyword_2()); }

	'[END]' 

{ after(grammarAccess.getTransactionsAccess().getENDKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Transaction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group__0__Impl
	rule__Transaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getTRANSACTIONKeyword_0()); }

	'TRANSACTION' 

{ after(grammarAccess.getTransactionAccess().getTRANSACTIONKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group__1__Impl
	rule__Transaction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getNameAssignment_1()); }
(rule__Transaction__NameAssignment_1)
{ after(grammarAccess.getTransactionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group__2__Impl
	rule__Transaction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getLeftParenthesSKeyword_2()); }

	'(' 

{ after(grammarAccess.getTransactionAccess().getLeftParenthesSKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group__3__Impl
	rule__Transaction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getArgumentsAssignment_3()); }
(rule__Transaction__ArgumentsAssignment_3)*
{ after(grammarAccess.getTransactionAccess().getArgumentsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group__4__Impl
	rule__Transaction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getRGhtParenthesSKeyword_4()); }

	')' 

{ after(grammarAccess.getTransactionAccess().getRGhtParenthesSKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group__5__Impl
	rule__Transaction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getBEGINKeyword_5()); }

	'[BEGIN]' 

{ after(grammarAccess.getTransactionAccess().getBEGINKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group__6__Impl
	rule__Transaction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getOperationsAssignment_6()); }
(rule__Transaction__OperationsAssignment_6)*
{ after(grammarAccess.getTransactionAccess().getOperationsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getENDKeyword_7()); }

	'[END]' 

{ after(grammarAccess.getTransactionAccess().getENDKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Argument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__0__Impl
	rule__Argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getKeywordAssignment_0()); }
(rule__Argument__KeywordAssignment_0)
{ after(grammarAccess.getArgumentAccess().getKeywordAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getNameAssignment_1()); }
(rule__Argument__NameAssignment_1)
{ after(grammarAccess.getArgumentAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Decrypt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decrypt__Group__0__Impl
	rule__Decrypt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decrypt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecryptAccess().getDecryptKeyword_0()); }

	'decrypt' 

{ after(grammarAccess.getDecryptAccess().getDecryptKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decrypt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decrypt__Group__1__Impl
	rule__Decrypt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Decrypt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecryptAccess().getMessageAssignment_1()); }
(rule__Decrypt__MessageAssignment_1)
{ after(grammarAccess.getDecryptAccess().getMessageAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decrypt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decrypt__Group__2__Impl
	rule__Decrypt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Decrypt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecryptAccess().getForKeyword_2()); }

	'for' 

{ after(grammarAccess.getDecryptAccess().getForKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decrypt__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decrypt__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decrypt__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecryptAccess().getParticipantAssignment_3()); }
(rule__Decrypt__ParticipantAssignment_3)
{ after(grammarAccess.getDecryptAccess().getParticipantAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Encrypt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Encrypt__Group__0__Impl
	rule__Encrypt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Encrypt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncryptAccess().getEncryptKeyword_0()); }

	'encrypt' 

{ after(grammarAccess.getEncryptAccess().getEncryptKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Encrypt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Encrypt__Group__1__Impl
	rule__Encrypt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Encrypt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncryptAccess().getMessageAssignment_1()); }
(rule__Encrypt__MessageAssignment_1)
{ after(grammarAccess.getEncryptAccess().getMessageAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Encrypt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Encrypt__Group__2__Impl
	rule__Encrypt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Encrypt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncryptAccess().getForKeyword_2()); }

	'for' 

{ after(grammarAccess.getEncryptAccess().getForKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Encrypt__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Encrypt__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Encrypt__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncryptAccess().getParticipantAssignment_3()); }
(rule__Encrypt__ParticipantAssignment_3)
{ after(grammarAccess.getEncryptAccess().getParticipantAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Send__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Send__Group__0__Impl
	rule__Send__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Send__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendAccess().getMessageAssignment_0()); }
(rule__Send__MessageAssignment_0)
{ after(grammarAccess.getSendAccess().getMessageAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Send__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Send__Group__1__Impl
	rule__Send__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Send__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendAccess().getColonColonKeyword_1()); }

	'::' 

{ after(grammarAccess.getSendAccess().getColonColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Send__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Send__Group__2__Impl
	rule__Send__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Send__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendAccess().getSourceAssignment_2()); }
(rule__Send__SourceAssignment_2)
{ after(grammarAccess.getSendAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Send__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Send__Group__3__Impl
	rule__Send__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Send__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendAccess().getHyphenMNusGreaterThanSGnKeyword_3()); }

	'->' 

{ after(grammarAccess.getSendAccess().getHyphenMNusGreaterThanSGnKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Send__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Send__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Send__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendAccess().getDestinationAssignment_4()); }
(rule__Send__DestinationAssignment_4)
{ after(grammarAccess.getSendAccess().getDestinationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Print__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Print__Group__0__Impl
	rule__Print__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrintAccess().getPrintKeyword_0()); }

	'print' 

{ after(grammarAccess.getPrintAccess().getPrintKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Print__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Print__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrintAccess().getMessageAssignment_1()); }
(rule__Print__MessageAssignment_1)
{ after(grammarAccess.getPrintAccess().getMessageAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Call__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__0__Impl
	rule__Call__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getCALLKeyword_0()); }

	'CALL' 

{ after(grammarAccess.getCallAccess().getCALLKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getTransactionNameAssignment_1()); }
(rule__Call__TransactionNameAssignment_1)
{ after(grammarAccess.getCallAccess().getTransactionNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__States__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__States__Group__0__Impl
	rule__States__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesAccess().getSTATESKeyword_0()); }

	'[STATES]' 

{ after(grammarAccess.getStatesAccess().getSTATESKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__States__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__States__Group__1__Impl
	rule__States__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesAccess().getStatesAssignment_1()); }
(rule__States__StatesAssignment_1)*
{ after(grammarAccess.getStatesAccess().getStatesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__States__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__States__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesAccess().getENDKeyword_2()); }

	'[END]' 

{ after(grammarAccess.getStatesAccess().getENDKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getSTATEKeyword_0()); }

	'STATE' 

{ after(grammarAccess.getStateAccess().getSTATEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
(rule__State__NameAssignment_1)
{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftParenthesSKeyword_2()); }

	'(' 

{ after(grammarAccess.getStateAccess().getLeftParenthesSKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getEventAssignment_3()); }
(rule__State__EventAssignment_3)
{ after(grammarAccess.getStateAccess().getEventAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRGhtParenthesSKeyword_4()); }

	')' 

{ after(grammarAccess.getStateAccess().getRGhtParenthesSKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__5__Impl
	rule__State__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getBEGINKeyword_5()); }

	'[BEGIN]' 

{ after(grammarAccess.getStateAccess().getBEGINKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__6__Impl
	rule__State__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGuardsAssignment_6()); }
(rule__State__GuardsAssignment_6)*
{ after(grammarAccess.getStateAccess().getGuardsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getENDKeyword_7()); }

	'[END]' 

{ after(grammarAccess.getStateAccess().getENDKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Guard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Guard__Group__0__Impl
	rule__Guard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getVertCalLNeKeyword_0()); }

	'|' 

{ after(grammarAccess.getGuardAccess().getVertCalLNeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Guard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Guard__Group__1__Impl
	rule__Guard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getCasemAssignment_1()); }
(rule__Guard__CasemAssignment_1)
{ after(grammarAccess.getGuardAccess().getCasemAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Guard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Guard__Group__2__Impl
	rule__Guard__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getEqualsSGnGreaterThanSGnKeyword_2()); }

	'=>' 

{ after(grammarAccess.getGuardAccess().getEqualsSGnGreaterThanSGnKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Guard__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Guard__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getOperationAssignment_3()); }
(rule__Guard__OperationAssignment_3)
{ after(grammarAccess.getGuardAccess().getOperationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GetEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetEvent__Group__0__Impl
	rule__GetEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GetEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetEventAccess().getWhoAssignment_0()); }
(rule__GetEvent__WhoAssignment_0)
{ after(grammarAccess.getGetEventAccess().getWhoAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetEvent__Group__1__Impl
	rule__GetEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GetEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetEventAccess().getGETKeyword_1()); }

	'GET' 

{ after(grammarAccess.getGetEventAccess().getGETKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetEvent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetEvent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GetEvent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetEventAccess().getKeywordAssignment_2()); }
(rule__GetEvent__KeywordAssignment_2)
{ after(grammarAccess.getGetEventAccess().getKeywordAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IsSendEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsSendEvent__Group__0__Impl
	rule__IsSendEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsSendEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsSendEventAccess().getKeywordAssignment_0()); }
(rule__IsSendEvent__KeywordAssignment_0)
{ after(grammarAccess.getIsSendEventAccess().getKeywordAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsSendEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsSendEvent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsSendEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsSendEventAccess().getIS_SENDKeyword_1()); }

	'IS_SEND' 

{ after(grammarAccess.getIsSendEventAccess().getIS_SENDKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Source__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Source__Group__0__Impl
	rule__Source__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceAccess().getSourceKeyword_0()); }

	'source' 

{ after(grammarAccess.getSourceAccess().getSourceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Source__Group__1__Impl
	rule__Source__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceAccess().getEqualsSGnKeyword_1()); }

	'=' 

{ after(grammarAccess.getSourceAccess().getEqualsSGnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Source__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceAccess().getDefineNameAssignment_2()); }
(rule__Source__DefineNameAssignment_2)
{ after(grammarAccess.getSourceAccess().getDefineNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__From__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__From__Group__0__Impl
	rule__From__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getFromKeyword_0()); }

	'from' 

{ after(grammarAccess.getFromAccess().getFromKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__From__Group__1__Impl
	rule__From__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getEqualsSGnKeyword_1()); }

	'=' 

{ after(grammarAccess.getFromAccess().getEqualsSGnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__From__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__From__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__From__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getDefineNameAssignment_2()); }
(rule__From__DefineNameAssignment_2)
{ after(grammarAccess.getFromAccess().getDefineNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__PDLFile__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPDLFileAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPDLFileAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PDLFile__DefinitionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPDLFileAccess().getDefinitionDefinitionsParserRuleCall_2_0()); }
	ruleDefinitions{ after(grammarAccess.getPDLFileAccess().getDefinitionDefinitionsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PDLFile__TransactionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPDLFileAccess().getTransactionTransactionsParserRuleCall_3_0()); }
	ruleTransactions{ after(grammarAccess.getPDLFileAccess().getTransactionTransactionsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PDLFile__StateAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPDLFileAccess().getStateStatesParserRuleCall_4_0()); }
	ruleStates{ after(grammarAccess.getPDLFileAccess().getStateStatesParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definitions__DefinitionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionsAccess().getDefinitionsDefineParserRuleCall_1_0()); }
	ruleDefine{ after(grammarAccess.getDefinitionsAccess().getDefinitionsDefineParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Define__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getDefineAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Define__KeywordAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAccess().getKeywordIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getDefineAccess().getKeywordIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transactions__TransactionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionsAccess().getTransactionsTransactionParserRuleCall_1_0()); }
	ruleTransaction{ after(grammarAccess.getTransactionsAccess().getTransactionsTransactionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTransactionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__ArgumentsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getArgumentsArgumentParserRuleCall_3_0()); }
	ruleArgument{ after(grammarAccess.getTransactionAccess().getArgumentsArgumentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__OperationsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getOperationsOperationParserRuleCall_6_0()); }
	ruleOperation{ after(grammarAccess.getTransactionAccess().getOperationsOperationParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__KeywordAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getKeywordIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getArgumentAccess().getKeywordIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Decrypt__MessageAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecryptAccess().getMessageIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDecryptAccess().getMessageIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Decrypt__ParticipantAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecryptAccess().getParticipantIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getDecryptAccess().getParticipantIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Encrypt__MessageAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncryptAccess().getMessageIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEncryptAccess().getMessageIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Encrypt__ParticipantAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEncryptAccess().getParticipantIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getEncryptAccess().getParticipantIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Send__MessageAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendAccess().getMessageIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getSendAccess().getMessageIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Send__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendAccess().getSourceIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSendAccess().getSourceIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Send__DestinationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendAccess().getDestinationIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getSendAccess().getDestinationIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Print__MessageAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrintAccess().getMessageIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPrintAccess().getMessageIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__TransactionNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getTransactionNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getCallAccess().getTransactionNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__States__StatesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesAccess().getStatesStateParserRuleCall_1_0()); }
	ruleState{ after(grammarAccess.getStatesAccess().getStatesStateParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__EventAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getEventEventParserRuleCall_3_0()); }
	ruleEvent{ after(grammarAccess.getStateAccess().getEventEventParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__GuardsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGuardsGuardParserRuleCall_6_0()); }
	ruleGuard{ after(grammarAccess.getStateAccess().getGuardsGuardParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__CasemAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getCasemCaseParserRuleCall_1_0()); }
	ruleCase{ after(grammarAccess.getGuardAccess().getCasemCaseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__OperationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getOperationOperationParserRuleCall_3_0()); }
	ruleOperation{ after(grammarAccess.getGuardAccess().getOperationOperationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetEvent__WhoAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetEventAccess().getWhoIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getGetEventAccess().getWhoIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetEvent__KeywordAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetEventAccess().getKeywordIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getGetEventAccess().getKeywordIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsSendEvent__KeywordAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsSendEventAccess().getKeywordIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getIsSendEventAccess().getKeywordIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Source__DefineNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceAccess().getDefineNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSourceAccess().getDefineNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__From__DefineNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFromAccess().getDefineNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getFromAccess().getDefineNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


