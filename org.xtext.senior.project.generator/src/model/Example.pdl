[KeyProtokol]
[DEFINITIONS]
    First = Participant
    Second = Participant
    Cipher = SynchronousCipher
    Msg = Message
[END]
[TRANSACTIONS]
    TRANSACTION FirstGetTransaction(Message Msg)
    [BEGIN]
        decrypt Msg for Second
        print Msg
    [END]
    
    TRANSACTION SecondGetTransaction(Message Msg)
    [BEGIN]
        decrypt Msg for First
        print Msg
        Msg::Second->First
    [END]
[END]
[STATES]
    STATE State1 (First GET Msg)
    [BEGIN]
        |always => CALL FirstGetTransaction(Msg)
    [END]
    STATE State12 (Second GET Msg)
    [BEGIN]
        |always => CALL SecondGetTransaction(Msg)
    [END]
[END]
[TEST]
     Msg::First->Second
[END]
[END]