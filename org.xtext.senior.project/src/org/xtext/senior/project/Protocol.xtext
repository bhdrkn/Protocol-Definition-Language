/*
*   Copyright 2011 Bahadýr AKIN
*
*   Licensed under the Apache License, Version 2.0 (the "License");
*   you may not use this file except in compliance with the License.
*   You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
*   Unless required by applicable law or agreed to in writing, software
*   distributed under the License is distributed on an "AS IS" BASIS,
*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*   See the License for the specific language governing permissions and
*   limitations under the License.
*/
grammar org.xtext.senior.project.Protocol with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate protocol "http://www.xtext.org/senior/project/Protocol"

PDLFile:
    'pdlfile' name=ID
    definition = Definitions
    transaction = Transactions
    state = States;

Definitions:
    '[DEFINITIONS]' 
     (definitions+=Define)*
    '[END]';

Define:
    name=ID '=' keyword=ID;

Transactions:
     '[TRANSACTIONS]' 
     (transactions += Transaction )*
     '[END]' ;

Transaction:
     'TRANSACTION' name=ID '(' (arguments+=Argument)* ')'
     '[BEGIN]' 
      (operations+=Operation)*
     '[END]' ;

Argument:
    keyword=ID name=ID;

Operation:
    Decrypt | Encrypt | Send | Print | Call;

Decrypt:
    'decrypt' message=ID 'for' participant=ID;

Encrypt:
    'encrypt' message=ID 'for' participant=ID;

Send:
    message=ID '::' source=ID '->' destination=ID;

Print:
    'print' message=ID;
    
Call:
    'CALL' transactionName=ID;

States:
     '[STATES]' 
     (states+=State)*
     '[END]' ;

State:
     'STATE' name=ID '(' event=Event ')'
     '[BEGIN]' 
     (guards+=Guard)*
     '[END]' ;
    
Guard:
     '|' casem=Case '=>' operation=Operation;

Event:
    GetEvent | IsSendEvent;

GetEvent:
    who=ID 'GET' keyword=ID;
    
IsSendEvent:
    keyword=ID 'IS_SEND';     

Case:
    Always | Otherwise | Source | From;
   
Always:
    'always';
    
Otherwise:
    'otherwise';
    
Source:
     'source' '=' defineName=ID;

From:
     'from' '=' defineName=ID;
    
